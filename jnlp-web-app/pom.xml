<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jnlp</groupId>
	<artifactId>jnlp-web-app</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>jnlp-web-app Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>jnlp-web-app</finalName>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.0.v20150612</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<executions>
					<!-- <execution> <phase>process-resources</phase> <goals> <goal>jnlp-download-servlet</goal> 
						</goals> </execution> -->
				</executions>

				<configuration>

					<!-- This is the directory containing the Velocity templates from which 
						the JNLP files will be generated. The default location is 'src/main/jnlp'. 
						<templateDirectory>src/main/jnlp/my-templates</templateDirectory> -->

					<!-- This is the name of the directory within which the processed JNLP 
						artifacts will be placed. This directory will reside in the root of the WAR 
						file produced by the enclosing project. The name provided here must match 
						the servlet-mapping url-pattern provided in the web.xml file. The default 
						value is 'webstart'. -->
					<outputDirectoryName>applications</outputDirectoryName>

					<jnlpFiles>

						<jnlpFile>
							<templateFilename>default-jnlp-servlet-template.vm</templateFilename>
							<outputFilename>application1.jnlp</outputFilename>
							<jarResources>
								<jarResource>
									<groupId>org.javafx</groupId>
									<artifactId>hello-world</artifactId>
									<version>0.0.1-SNAPSHOT</version>
									<!-- <classifier>[some optional classifier]</classifier> -->
									<!-- A mainClass element must be specified on one, and only one, 
										jarResource per jnlpFile -->
									<mainClass>org.javafx.helloworld.App</mainClass>
								</jarResource>
								<!-- <jarResource> <groupId>[some groupId]</groupId> <artifactId>[some 
									artifactId]</artifactId> <version>[some version]</version> </jarResource> -->
							</jarResources>
						</jnlpFile>
						<!-- <jnlpFile> <templateFilename>app2Template.vm</templateFilename> 
							<outputFilename>application2.jnlp</outputFilename> <jarResources> <jarResource> 
							<groupId>[some groupId]</groupId> <artifactId>[some artifactId]</artifactId> 
							<version>[some version]</version> <mainClass>[app2 main class]</mainClass> 
							</jarResource> </jarResources> </jnlpFile> -->
					</jnlpFiles>

					<!-- Jar resources that are to be included in all generated JNLP files 
						are specified here. If specified here, they cannot also be included in a 
						jnlpFile configuration element. -->
					<commonJarResources>
						<jarResource>
							<groupId>commons-lang</groupId>
							<artifactId>commons-lang</artifactId>
							<version>2.3</version>
						</jarResource>
						<jarResource>
							<groupId>commons-lang</groupId>
							<artifactId>commons-lang</artifactId>
							<version>2.2</version>
							<!-- When deploying multiple versions of an artifact, only one of 
								them can be included in the generated JNLP file. -->
							<includeInJnlp>false</includeInJnlp>
						</jarResource>
					</commonJarResources>

					<!-- Set to true to exclude all transitive dependencies from the JNLP 
						bundle. Default is false. -->
					<excludeTransitive>false</excludeTransitive>

				</configuration>

			</plugin>
		</plugins>
	</build>
</project>
